#!/bin/bash

set -e

# define colors
safe_tput() { [[ -t 1 ]] && tput "$@" || echo ""; }
CYAN=$(safe_tput setaf 6)
GREEN=$(safe_tput setaf 2)
RESET=$(safe_tput sgr0)

REPO_ROOT=$(git rev-parse --show-toplevel)
FILE_NAME=$(basename "$0")

function check_error {
  if [ $? -ne 0 ]; then
    exit 1
  fi
}

if test -z "$(git ls-files --exclude-standard --others)" && git diff-files --quiet; then
  # no unstaged changes, run formater
  echo "${CYAN}[$FILE_NAME]${RESET} üßπ Running code formatter..."
  pushd "$REPO_ROOT" >/dev/null 2>&1 || exit 0
  make format
  check_error
  popd >/dev/null 2>&1 || exit 0

  if ! ( test -z "$(git ls-files --exclude-standard --others)" && git diff-files --quiet ); then
    echo "${CYAN}[$FILE_NAME]${RESET} ‚ö†Ô∏è  Code formatted, please stage the changes and commit again."
    exit 1
  fi
else
  echo "${CYAN}[$FILE_NAME]${RESET} ‚ö†Ô∏è  Unstaged changes detected, please stage them before committing."
  echo "${CYAN}[$FILE_NAME]${RESET} üí° If you want to commit without formatting, use ${GREEN}git commit --no-verify${RESET}."
  exit 1
fi
